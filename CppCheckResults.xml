<?xml version="1.0" encoding="UTF-8" ?>
<results>
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1938" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="569" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1172" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1173" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1174" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1181" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1182" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1183" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1184" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="103" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="136" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2260" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2977" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2990" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\validate.h" line="66" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="771" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="996" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="1504" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\icon.h" line="70" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\confbase.h" line="216" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\winpars.h" line="270" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\bitmap.h" line="156" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="290" id="uninitMemberVar" severity="style" msg="Member variable &apos;DecoderState::accum&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="290" id="uninitMemberVar" severity="style" msg="Member variable &apos;DecoderState::bit&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="290" id="uninitMemberVar" severity="style" msg="Member variable &apos;DecoderState::msb&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="290" id="uninitMemberVar" severity="style" msg="Member variable &apos;DecoderState::isLSB&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="319" id="uninitMemberVar" severity="style" msg="Member variable &apos;EncoderState::accum&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="319" id="uninitMemberVar" severity="style" msg="Member variable &apos;EncoderState::bit&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tracker.h" line="71" id="operatorEqVarError" severity="style" msg="Member variable &apos;wxTrackable::m_first&apos; is not assigned a value in &apos;wxTrackable::operator=&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="128" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxFontInfo::m_pointSize&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="34" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxModule::m_state&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmltag.h" line="38" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxHtmlTagsCache::m_CachePos&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="401" id="operatorEqVarError" severity="style" msg="Member variable &apos;wxFilterClassFactory::m_next&apos; is not assigned a value in &apos;wxFilterClassFactory::operator=&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="84" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxHtmlRenderingState::m_bgMode&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\winpars.h" line="268" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxHtmlWinTagHandler::m_WParser&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_crntShiftDWord&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_pixelCount&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_EOFCode&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_clearCode&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_runningCode&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_runningBits&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_maxCode1&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_crntCode&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_crntShiftState&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imaggif.h" line="30" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGIFHandler::m_LZBuf&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="operatorEq" severity="style" msg='The wxLongToLongHashMap_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxLongToLongHashMap_wxImplementation_HashTable &amp;wxLongToLongHashMap_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="operatorEq" severity="style" msg='The wxStringToStringHashMap_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxStringToStringHashMap_wxImplementation_HashTable &amp;wxStringToStringHashMap_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="operatorEq" severity="style" msg='The wxStringToNumHashMap_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxStringToNumHashMap_wxImplementation_HashTable &amp;wxStringToNumHashMap_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="operatorEq" severity="style" msg='The wxShadowObjectMethods_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxShadowObjectMethods_wxImplementation_HashTable &amp;wxShadowObjectMethods_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="operatorEq" severity="style" msg='The wxShadowObjectFields_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxShadowObjectFields_wxImplementation_HashTable &amp;wxShadowObjectFields_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="operatorEq" severity="style" msg='The wxStringToColourHashMap_wxImplementation_HashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxStringToColourHashMap_wxImplementation_HashTable &amp;wxStringToColourHashMap_wxImplementation_HashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="211" id="operatorEq" severity="style" msg='The wxPlatform::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxPlatform &amp;wxPlatform::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="116" id="operatorEq" severity="style" msg='The wxVariant::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxVariant &amp;wxVariant::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="290" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="319" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;mode&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="163" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_type&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\versioninfo.h" line="29" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_name&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\versioninfo.h" line="33" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_description&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\versioninfo.h" line="34" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_copyright&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2297" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_activationReason&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="51" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Location&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="52" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_MimeType&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="574" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Colour&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="599" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Font&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="659" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Target&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="661" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Href&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="661" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Target&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="663" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Href&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="663" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_Target&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlwin.h" line="581" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_pt&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlwin.h" line="582" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_mouseEvent&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlwin.h" line="619" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_linkInfo&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="533" id="copyCtorPointerCopying" severity="style" msg="Value of pointer &apos;m_bufdata&apos;, which points to allocated memory, is copied in copy constructor instead of allocating new memory." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdiobj.h" line="89" id="duplInheritedMember" severity="style" msg="The class &apos;wxIconBundle&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxGDIObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxGDIObject&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxImage&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\frame.h" line="247" id="duplInheritedMember" severity="style" msg="The class &apos;wxFrame&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxFrameBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\frame.h" line="247" id="duplInheritedMember" severity="style" msg="The class &apos;wxFrame&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxFrameBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="1849" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindow&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxWindowBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="1851" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindow&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxWindowBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="1851" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindow&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxWindowBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxVariant&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3744" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvtHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3690" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowBase&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxEvtHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3693" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowBase&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxEvtHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxEvtHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxIdleEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxThreadEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxCommandEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMouseEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxFocusEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxChildFocusEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxKeyEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxNavigationKeyEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxSetCursorEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxScrollEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxScrollWinEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxSizeEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMoveEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxCloseEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxActivateEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowCreateEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowDestroyEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxShowEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxIconizeEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMaximizeEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMouseCaptureChangedEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMouseCaptureLostEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxPaintEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxEraseEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxNcPaintEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxMenuEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxContextMenuEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxSysColourChangedEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxDisplayChangedEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxQueryNewPaletteEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxPaletteChangedEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxJoystickEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxDropFilesEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxInitDialogEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxUpdateUIEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxClipboardTextEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxHelpEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxNotifyEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxRegionIterator&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3744" id="duplInheritedMember" severity="style" msg="The class &apos;wxValidator&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvtHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxAcceleratorTable&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxToolTip&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="84" id="duplInheritedMember" severity="style" msg="The class &apos;wxInputStream&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxStreamBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="93" id="duplInheritedMember" severity="style" msg="The struct &apos;wxWeakRefImpl&apos; defines member variable with name &apos;m_pobj&apos; also defined in its parent class &apos;wxWeakRefStatic&lt;T&gt;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\toplevel.h" line="358" id="duplInheritedMember" severity="style" msg="The class &apos;wxTopLevelWindowMSW&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxTopLevelWindowBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\toplevel.h" line="358" id="duplInheritedMember" severity="style" msg="The class &apos;wxTopLevelWindowMSW&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxTopLevelWindowBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxConfigBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="84" id="duplInheritedMember" severity="style" msg="The class &apos;wxOutputStream&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxStreamBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\confbase.h" line="406" id="duplInheritedMember" severity="style" msg="The class &apos;wxRegConfig&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxConfigBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxModule&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlEntitiesParser&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxStreamBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="266" id="duplInheritedMember" severity="style" msg="The class &apos;wxCountingOutputStream&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxOutputStream&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="224" id="duplInheritedMember" severity="style" msg="The class &apos;wxFilterInputStream&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxInputStream&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="266" id="duplInheritedMember" severity="style" msg="The class &apos;wxFilterOutputStream&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxOutputStream&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxFilterClassFactoryBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="375" id="duplInheritedMember" severity="style" msg="The class &apos;wxFilterClassFactory&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxFilterClassFactoryBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxFSFile&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxFileSystemHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxFileSystem&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlParser&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlTagHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="370" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlContainerCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlCell&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="370" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlWordCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlCell&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="370" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlColourCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlCell&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="370" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlFontCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlCell&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="370" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlWidgetCell&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlCell&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scrolwin.h" line="485" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlWindow&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxScrolledWindow&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="52" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlWinParser&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlParser&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="218" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlWinTagHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlTagHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="116" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlTagsModule&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxModule&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlFilter&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlfilt.h" line="29" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlFilterPlainText&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlFilter&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlfilt.h" line="29" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlFilterHTML&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxHtmlFilter&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxImageHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxBMPHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imagbmp.h" line="68" id="duplInheritedMember" severity="style" msg="The class &apos;wxICOHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxBMPHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imagbmp.h" line="98" id="duplInheritedMember" severity="style" msg="The class &apos;wxCURHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxICOHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\imagbmp.h" line="127" id="duplInheritedMember" severity="style" msg="The class &apos;wxANIHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCURHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxPNGHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxGIFHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxPCXHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxJPEGHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxTGAHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxTIFFHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxPNMHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="174" id="duplInheritedMember" severity="style" msg="The class &apos;wxXPMHandler&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxImageHandler&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxMask&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlCellEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxHtmlLinkEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\frame.h" line="163" id="duplInheritedMember" severity="style" msg="The class &apos;HelpFrame&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxFrame&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\frame.h" line="163" id="duplInheritedMember" severity="style" msg="The class &apos;HelpFrame&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxFrame&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\windowid.h" line="38" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowIDRef&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\windowid.h" line="43" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowIDRef&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="366" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="368" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="371" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="372" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="374" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="386" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="388" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="391" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="392" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="394" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWCharBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="456" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMemoryBufferData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="522" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMemoryBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="370" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMBConvUTF8&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="493" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCSConv&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strconv.h" line="494" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCSConv&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\unichar.h" line="34" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUniChar&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\unichar.h" line="35" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUniChar&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\unichar.h" line="39" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUniChar&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\unichar.h" line="42" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUniChar&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\unichar.h" line="191" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUniCharRef&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="139" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="141" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="143" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="145" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="147" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="149" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFormatString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="249" id="noExplicitConstructor" severity="style" msg="Struct &apos;wxFormatStringArgument&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\strvararg.h" line="842" id="noExplicitConstructor" severity="style" msg="Struct &apos;wxArgNormalizedString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="163" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCStrData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="164" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCStrData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1241" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1254" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1267" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1276" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1278" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1284" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1317" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1327" id="noExplicitConstructor" severity="style" msg="Class &apos;wxString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1053" id="noExplicitConstructor" severity="style" msg="Class &apos;iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1068" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1085" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgout.h" line="110" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMessageOutputStderr&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgout.h" line="136" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMessageOutputBest&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="108" id="noExplicitConstructor" severity="style" msg="Class &apos;wxStringClientData&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scopeguard.h" line="422" id="noExplicitConstructor" severity="style" msg="Class &apos;VariableNullerImpl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="378" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListKey&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="380" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListKey&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="382" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListKey&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="384" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListKey&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="488" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="noExplicitConstructor" severity="style" msg="Class &apos;wxObjectList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1205" id="noExplicitConstructor" severity="style" msg="Class &apos;wxList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="noExplicitConstructor" severity="style" msg="Class &apos;wxStringListBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1254" id="noExplicitConstructor" severity="style" msg="Class &apos;wxStringList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="430" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRealPoint&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="547" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPoint&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPointList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="709" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRect&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="934" id="noExplicitConstructor" severity="style" msg="Class &apos;wxResourceCache&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxGDIImageHandlerList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\cursor.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCursor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\cursor.h" line="28" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCursor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\cursor.h" line="30" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCursor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="142" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="254" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="280" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="282" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="385" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSortedArrayString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="396" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCArrayString&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="460" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayStringsAdapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="474" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayStringsAdapter&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filefn.h" line="816" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPathList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\longlong.h" line="113" id="noExplicitConstructor" severity="style" msg="Class &apos;wxLongLongNative&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\longlong.h" line="350" id="noExplicitConstructor" severity="style" msg="Class &apos;wxULongLongNative&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="215" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPlatform&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="216" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPlatform&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="217" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPlatform&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="218" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPlatform&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="711" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowDisabler&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="714" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowDisabler&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\utils.h" line="749" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBusyCursor&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1021" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayShort&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1021" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1021" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1022" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayInt&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1022" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1022" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1023" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayDouble&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1023" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1023" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1024" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayLong&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1024" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1024" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1025" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayPtrVoid&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1025" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1025" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="144" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMutex&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="188" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMutexLocker&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="246" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCriticalSection&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="304" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCriticalSectionLocker&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="331" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCondition&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="519" id="noExplicitConstructor" severity="style" msg="Class &apos;wxThread&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\thread.h" line="714" id="noExplicitConstructor" severity="style" msg="Class &apos;wxThreadHelper&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\typeinfo.h" line="66" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTypeIdentifier&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="134" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAnyValueTypeScopedPtr&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="238" id="noExplicitConstructor" severity="style" msg="Class &apos;DataHolder&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="467" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="470" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="472" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="475" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="491" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1133" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDateTime&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="297" id="noExplicitConstructor" severity="style" msg="Class &apos;TimeZone&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="300" id="noExplicitConstructor" severity="style" msg="Class &apos;TimeZone&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1359" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTimeSpan&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1549" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHolidayAuthoritiesArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1549" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1549" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVariantList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="111" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVariant&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="415" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAnyToVariantRegistration&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="428" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAnyToVariantRegistrationImpl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="755" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAny&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="762" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAny&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="767" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAny&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="780" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAny&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAnyList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1100" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPropagationDisabler&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1709" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMouseEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1913" id="noExplicitConstructor" severity="style" msg="Class &apos;wxKeyEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2149" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPaintEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2182" id="noExplicitConstructor" severity="style" msg="Class &apos;wxNcPaintEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2258" id="noExplicitConstructor" severity="style" msg="Class &apos;wxChildFocusEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2321" id="noExplicitConstructor" severity="style" msg="Class &apos;wxInitDialogEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2489" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMaximizeEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2670" id="noExplicitConstructor" severity="style" msg="Class &apos;wxUpdateUIEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2807" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMouseCaptureLostEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2843" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPaletteChangedEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2873" id="noExplicitConstructor" severity="style" msg="Class &apos;wxQueryNewPaletteEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2975" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowCreateEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="2988" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowDestroyEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3248" id="noExplicitConstructor" severity="style" msg="Class &apos;wxEventTableEntryPointerArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3248" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3248" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3266" id="noExplicitConstructor" severity="style" msg="Class &apos;wxEventHashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3747" id="noExplicitConstructor" severity="style" msg="Class &apos;wxEvtHandlerArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3747" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3747" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="126" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFontInfo&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="128" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFontInfo&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\font.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFont&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\font.h" line="95" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFont&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\colour.h" line="25" id="noExplicitConstructor" severity="style" msg="Class &apos;wxColour&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\region.h" line="20" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRegion&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\region.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRegion&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\region.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRegion&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\region.h" line="65" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRegionIterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\translation.h" line="55" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPluralFormsCalculatorPtr&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\translation.h" line="85" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMsgCatalog&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\accel.h" line="27" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAcceleratorTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="592" id="noExplicitConstructor" severity="style" msg="Class &apos;ChildrenRepositioningGuard&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\window.h" line="727" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowCreationHook&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\iconloc.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxIconLocationBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\icon.h" line="50" id="noExplicitConstructor" severity="style" msg="Class &apos;wxIcon&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\icon.h" line="59" id="noExplicitConstructor" severity="style" msg="Class &apos;wxIcon&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\iconbndl.h" line="59" id="noExplicitConstructor" severity="style" msg="Class &apos;wxIconBundle&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="266" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRefDynamic&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="271" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRefDynamic&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\tooltip.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxToolTip&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scrolwin.h" line="67" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAnyScrollHelperBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scrolwin.h" line="110" id="noExplicitConstructor" severity="style" msg="Class &apos;wxScrollHelperBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\scrolwin.h" line="20" id="noExplicitConstructor" severity="style" msg="Class &apos;wxScrollHelper&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\registry.h" line="100" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRegKey&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;wxModuleList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayClassInfo&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmltag.h" line="39" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlTagsCache&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="307" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFilterInputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="308" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFilterInputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="329" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFilterOutputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="330" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFilterOutputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="505" id="noExplicitConstructor" severity="style" msg="Class &apos;wxStreamBuffer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="667" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWrapperInputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\stream.h" line="668" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWrapperInputStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\convauto.h" line="36" id="noExplicitConstructor" severity="style" msg="Class &apos;wxConvAuto&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\file.h" line="55" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFile&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\file.h" line="145" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTempFile&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFSHandlerHash_wxImplementation_HashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlTagHandlersSet_wxImplementation_HashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlTagHandlersHash_wxImplementation_HashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="447" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlContainerCell&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlcell.h" line="599" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlFontCell&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\encconv.h" line="44" id="noExplicitConstructor" severity="style" msg="Class &apos;wxFontEncodingArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\encconv.h" line="44" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\encconv.h" line="44" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\winpars.h" line="41" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlWinParser&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="noExplicitConstructor" severity="style" msg="Class &apos;wxImageHistogramBase_wxImplementation_HashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="269" id="noExplicitConstructor" severity="style" msg="Class &apos;wxImage&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\bitmap.h" line="57" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitmap&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\bitmap.h" line="246" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMask&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\bitmap.h" line="249" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMask&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlwin.h" line="144" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHtmlWindowMouseHelper&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="218" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="227" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="218" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxEvtHandler&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="227" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxEvtHandler&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="234" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxEvtHandler&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="218" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxWindow&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="227" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxWindow&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\weakref.h" line="234" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWeakRef&lt;wxWindow&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scopedptr.h" line="43" id="noExplicitConstructor" severity="style" msg="Class &apos;wxScopedPtr&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="237" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVector&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="152" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="196" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="197" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="237" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVector&lt;wxToolTip*&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="237" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVector&lt;wxHtmlTagHandlersHash*&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\scopeguard.h" line="139" id="noExplicitConstructor" severity="style" msg="Class &apos;wxScopeGuardImpl0&lt;F&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="284" id="noExplicitConstructor" severity="style" msg="Class &apos;wxObjectDataPtr&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\flags.h" line="29" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitset&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\flags.h" line="35" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitset&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="404" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWritableCharTypeBuffer&lt;char&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="410" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWritableCharTypeBuffer&lt;char&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="404" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWritableCharTypeBuffer&lt;__WCHAR_TYPE__&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="410" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWritableCharTypeBuffer&lt;__WCHAR_TYPE__&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="269" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;char&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="307" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;char&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="269" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;__WCHAR_TYPE__&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="307" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;__WCHAR_TYPE__&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="269" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\buffer.h" line="307" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCharTypeBuffer&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="831" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="832" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="176" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="178" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="185" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="187" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="440" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="442" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="449" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\font.h" line="451" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2235" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2240" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2245" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2249" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2251" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="2253" id="CastIntegerToAddressAtReturn" severity="style" msg="Returning an integer (int/long/etc) in a function with pointer return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit integer down to 32-bit pointer. The safe way is to always return a pointer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1537" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\iconbndl.h" line="22" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\statusbr.h" line="103" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1028" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\string.h" line="1063" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="746" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="749" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hashmap.h" line="752" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="19" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clntdata.h" line="24" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="773" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="783" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="794" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="802" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="894" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="260" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="262" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="287" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\arrstr.h" line="289" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\longlong.h" line="238" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\longlong.h" line="466" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1021" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1022" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1023" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1024" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dynarray.h" line="1025" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1242" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1253" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1260" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1507" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1549" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3248" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="3747" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="24" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filesys.h" line="176" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="30" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\html\htmlpars.h" line="34" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\encconv.h" line="44" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\image.h" line="189" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="163" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="167" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="208" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="212" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="251" id="unreadVariable" severity="style" msg="Variable &apos;holder&apos; is assigned a value that is never used." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\textctrl.h" line="300" id="operatorEq" severity="style" msg='The wxTextAttr::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxTextAttr &amp;wxTextAttr::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\ctrlsub.h" line="187" id="useInitializationList" severity="style" msg="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;m_clientDataItemsType&apos; a value by passing the value to the constructor in the initialization list." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\statbox.h" line="68" id="duplInheritedMember" severity="style" msg="The class &apos;wxRadioBox&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxStaticBox&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\textctrl.h" line="769" id="duplInheritedMember" severity="style" msg="The class &apos;wxTextCtrl&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxTextCtrlBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\control.h" line="132" id="duplInheritedMember" severity="style" msg="The class &apos;wxTextCtrlBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxControl&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxTextUrlEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxDialogLayoutAdapter&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dialog.h" line="287" id="duplInheritedMember" severity="style" msg="The class &apos;wxStandardDialogLayoutAdapter&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDialogLayoutAdapter&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1577" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowModalDialogEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxCommandEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\radiobox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxToolTipArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\radiobox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\radiobox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\textctrl.h" line="884" id="noExplicitConstructor" severity="style" msg="Class &apos;wxStreamToTextRedirector&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sharedptr.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSharedPtr&lt;T&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sharedptr.h" line="117" id="noExplicitConstructor" severity="style" msg="Struct &apos;reftype&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1195" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\list.h" line="1242" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gdicmn.h" line="690" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\gdiimage.h" line="26" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\variant.h" line="101" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\any.h" line="1109" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\window.h" line="151" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\datetime.h" line="1231" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\radiobox.h" line="26" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="tedevent.h" line="51" id="noExplicitConstructor" severity="style" msg="Class &apos;TEDEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="teletext40.cpp" line="114" id="invalidScanfArgType_int" severity="style" msg="%x in format string (no. 1) requires &apos;unsigned int *&apos; but the argument type is &apos;signed int *&apos;." />
    <error file="teletext40.cpp" line="45" id="variableScope" severity="style" msg="The scope of the variable &apos;pos&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxline.h" line="19" id="noExplicitConstructor" severity="style" msg="Class &apos;TTXLine&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="ttxrow28.h" line="13" id="noExplicitConstructor" severity="style" msg="Class &apos;TTXRow28&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="ttxline.cpp" line="60" id="variableScope" severity="style" msg="The scope of the variable &apos;ch&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxline.cpp" line="99" id="variableScope" severity="style" msg="The scope of the variable &apos;ch&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxline.cpp" line="118" id="variableScope" severity="style" msg="The scope of the variable &apos;ch&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxline.cpp" line="35" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXLine::m_Counter&apos; is not initialized in the constructor." />
    <error file="ttxline.cpp" line="29" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXLine::m_Counter&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="160" id="unreachableCode" severity="style" msg="Statements following return, break, continue, goto or throw will never be executed." />
    <error file="ttxpage.cpp" line="333" id="variableScope" severity="style" msg="The scope of the variable &apos;pageNum&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxpage.cpp" line="1151" id="variableScope" severity="style" msg="The scope of the variable &apos;ch1&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="ttxpage.cpp" line="29" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_row28&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="29" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_loaded&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="605" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_row28&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_PageNumber&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_SubPage&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_pLine&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_row28&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_fastextlinks&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_cycletimeseconds&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_cycletimetype&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_subcode&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_pagestatus&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_region&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::instance&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="675" id="uninitMemberVar" severity="style" msg="Member variable &apos;TTXPage::m_loaded&apos; is not initialized in the constructor." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_PageNumber&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_SubPage&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_pLine&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_row28&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_fastextlinks&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_cycletimeseconds&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_cycletimetype&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_subcode&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_pagestatus&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_region&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::instance&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::undoList&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_current&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="681" id="operatorEqVarError" severity="style" msg="Member variable &apos;TTXPage::m_loaded&apos; is not assigned a value in &apos;TTXPage::operator=&apos;." />
    <error file="ttxpage.cpp" line="605" id="passedByValue" severity="style" msg="Parameter &apos;filename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="ttxpage.cpp" line="605" id="passedByValue" severity="style" msg="Parameter &apos;shortFilename&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="ttxrow28.cpp" line="9" id="passedByValue" severity="style" msg="Parameter &apos;line&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="67" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="94" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="115" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="121" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="149" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="331" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\log.h" line="343" id="noCopyConstructor" severity="style" msg="&apos;class wxLog&apos; does not have a copy constructor which is recommended since the class contains a pointer to allocated memory." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxImageList&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1608" id="duplInheritedMember" severity="style" msg="The class &apos;wxBookCtrlEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxNotifyEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\control.h" line="132" id="duplInheritedMember" severity="style" msg="The class &apos;wxBookCtrlBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxControl&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\dialog.h" line="137" id="duplInheritedMember" severity="style" msg="The class &apos;wxFileDialogBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDialog&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\filedlg.h" line="181" id="duplInheritedMember" severity="style" msg="The class &apos;wxFileDialog&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxFileDialogBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxTimerEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\event.h" line="1091" id="duplInheritedMember" severity="style" msg="The class &apos;wxClipboardEvent&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxEvent&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\frame.h" line="163" id="duplInheritedMember" severity="style" msg="The class &apos;wxTEDFrame&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxFrame&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\frame.h" line="163" id="duplInheritedMember" severity="style" msg="The class &apos;wxTEDFrame&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxFrame&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\log.h" line="732" id="noExplicitConstructor" severity="style" msg="Class &apos;wxLogStderr&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\log.h" line="750" id="noExplicitConstructor" severity="style" msg="Class &apos;wxLogStream&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\log.h" line="804" id="noExplicitConstructor" severity="style" msg="Class &apos;wxLogChain&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\logg.h" line="32" id="noExplicitConstructor" severity="style" msg="Class &apos;wxLogTextCtrl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\app.h" line="782" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAppInitializer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\bookctrl.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxArrayPages&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\bookctrl.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\bookctrl.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMenuList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMenuItemList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="52" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMenuBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="18" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAcceleratorArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="18" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="18" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="55" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMenu&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="192" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMenuBar&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\timer.h" line="129" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTimerRunner&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\timer.h" line="165" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTimerEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataform.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataFormat&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataform.h" line="29" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataFormat&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataform.h" line="30" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataFormat&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataform.h" line="31" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataFormat&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataform.h" line="32" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataFormat&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="201" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDataObjectSimple&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSimpleDataObjectList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="341" id="noExplicitConstructor" severity="style" msg="Class &apos;wxHTMLDataObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="380" id="noExplicitConstructor" severity="style" msg="Class &apos;wxTextDataObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="448" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitmapDataObjectBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="497" id="noExplicitConstructor" severity="style" msg="Class &apos;wxCustomDataObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataobj2.h" line="27" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitmapDataObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataobj2.h" line="66" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBitmapDataObject2&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\ole\dataobj2.h" line="125" id="noExplicitConstructor" severity="style" msg="Class &apos;wxURLDataObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clipbrd.h" line="106" id="noExplicitConstructor" severity="style" msg="Class &apos;wxClipboardEvent&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\clipbrd.h" line="177" id="noExplicitConstructor" severity="style" msg="Class &apos;wxClipboardLocker&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPersistentObjectsMap_wxImplementation_HashTable&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="noExplicitConstructor" severity="style" msg="Struct &apos;Node&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="185" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPersistentObject&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist\window.h" line="29" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPersistentWindowBase&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\display.h" line="47" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDisplay&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist\toplevel.h" line="44" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPersistentTLW&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist\window.h" line="70" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPersistentWindow&lt;wxTopLevelWindow&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\vector.h" line="237" id="noExplicitConstructor" severity="style" msg="Class &apos;wxVector&lt;wxDataFormat&gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\log.h" line="406" id="passedByValue" severity="style" msg="Parameter &apos;component&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="passedByValue" severity="style" msg="Parameter &apos;i&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="wxTEDMain.cpp" line="339" id="incorrectLogicOperator" severity="style" msg="Logical conjunction always evaluates to false: k &lt; 256 &amp;&amp; k &gt; 2303. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" />
    <error file="wxTEDMain.cpp" line="2466" id="incorrectLogicOperator" severity="style" msg="Logical conjunction always evaluates to false: k &lt; 256 &amp;&amp; k &gt; 2303. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" />
    <error file="wxTEDMain.cpp" line="2536" id="incorrectLogicOperator" severity="style" msg="Logical conjunction always evaluates to false: k &lt; 256 &amp;&amp; k &gt; 2303. Are these conditions necessary? Did you intend to use || instead? Are the numbers correct? Are you comparing the correct variables?" />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="171" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="176" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="209" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="211" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="213" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="215" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="219" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="221" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="223" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="225" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="163" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="272" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="488" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\textdlgg.h" line="72" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="wxTEDMain.cpp" line="1466" id="cstyleCast" severity="style" msg="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." />
    <error file="wxTEDMain.cpp" line="553" id="variableScope" severity="style" msg="The scope of the variable &apos;graphicsMode&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="554" id="variableScope" severity="style" msg="The scope of the variable &apos;separated&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="555" id="variableScope" severity="style" msg="The scope of the variable &apos;doubleHeight&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="556" id="variableScope" severity="style" msg="The scope of the variable &apos;skipnextrow&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="557" id="variableScope" severity="style" msg="The scope of the variable &apos;flashing&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="558" id="variableScope" severity="style" msg="The scope of the variable &apos;hold&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="559" id="variableScope" severity="style" msg="The scope of the variable &apos;holdChar&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="560" id="variableScope" severity="style" msg="The scope of the variable &apos;concealed&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." />
    <error file="wxTEDMain.cpp" line="1424" id="arrayIndexOutOfBounds" severity="error" msg="Array &apos;m_fontSize[100]&apos; accessed at index 100, which is out of bounds." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\gauge.h" line="52" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGaugeBase::m_nDirection&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\dirdlgg.h" line="42" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGenericDirDialog::m_dirCtrl&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\dirdlgg.h" line="42" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxGenericDirDialog::m_input&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\textdlgg.h" line="39" id="uninitMemberVar" severity="style" msg="Member variable &apos;wxTextEntryDialog::m_dialogStyle&apos; is not initialized in the constructor." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\hash.h" line="195" id="operatorEq" severity="style" msg='The wxHashTable::operator= does not conform to standard C/C++ behaviour. To conform to standard C/C++ behaviour, return a reference to self (such as: &apos;wxHashTable &amp;wxHashTable::operator=(..) { .. return *this; }&apos;. For safety reasons it might be better to not fix this message. If you think that safety is always more important than conformance then please ignore/suppress this message. For more details about this topic, see the book &quot;Effective C++&quot; by Scott Meyers.' />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxLayoutConstraints&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="1013" id="duplInheritedMember" severity="style" msg="The class &apos;wxStdDialogButtonSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxBoxSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="723" id="duplInheritedMember" severity="style" msg="The class &apos;wxBoxSizer&apos; defines member variable with name &apos;m_minSize&apos; also defined in its parent class &apos;wxSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="744" id="duplInheritedMember" severity="style" msg="The class &apos;wxBoxSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="27" id="duplInheritedMember" severity="style" msg="The class &apos;wxClientDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxWindowDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="698" id="duplInheritedMember" severity="style" msg="The class &apos;wxToolBar&apos; defines member variable with name &apos;sm_eventTable&apos; also defined in its parent class &apos;wxToolBarBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="698" id="duplInheritedMember" severity="style" msg="The class &apos;wxToolBar&apos; defines member variable with name &apos;sm_eventHashTable&apos; also defined in its parent class &apos;wxToolBarBase&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="43" id="duplInheritedMember" severity="style" msg="The class &apos;wxPaintDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxClientDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1376" id="duplInheritedMember" severity="style" msg="The class &apos;wxWindowDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1376" id="duplInheritedMember" severity="style" msg="The class &apos;wxScreenDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1376" id="duplInheritedMember" severity="style" msg="The class &apos;wxMemoryDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1376" id="duplInheritedMember" severity="style" msg="The class &apos;wxPrinterDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxDCImpl&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\control.h" line="132" id="duplInheritedMember" severity="style" msg="The class &apos;wxRadioButton&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxControl&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxToolBarToolBase&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\choice.h" line="177" id="duplInheritedMember" severity="style" msg="The class &apos;wxComboBox&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxChoice&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxIndividualLayoutConstraint&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\object.h" line="357" id="duplInheritedMember" severity="style" msg="The class &apos;wxSizerItem&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxObject&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="744" id="duplInheritedMember" severity="style" msg="The class &apos;wxGridSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="831" id="duplInheritedMember" severity="style" msg="The class &apos;wxFlexGridSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxGridSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="1013" id="duplInheritedMember" severity="style" msg="The class &apos;wxStaticBoxSizer&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxBoxSizer&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\validate.h" line="93" id="duplInheritedMember" severity="style" msg="The class &apos;wxTextValidator&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxValidator&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\dialog.h" line="137" id="duplInheritedMember" severity="style" msg="The class &apos;wxTextEntryDialog&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxDialog&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\generic\textdlgg.h" line="88" id="duplInheritedMember" severity="style" msg="The class &apos;wxPasswordEntryDialog&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxTextEntryDialog&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcmemory.h" line="39" id="duplInheritedMember" severity="style" msg="The class &apos;wxBufferedDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxMemoryDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcbuffer.h" line="138" id="duplInheritedMember" severity="style" msg="The class &apos;wxBufferedPaintDC&apos; defines member variable with name &apos;ms_classInfo&apos; also defined in its parent class &apos;wxBufferedDC&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgdlg.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;ButtonLabel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgdlg.h" line="43" id="noExplicitConstructor" severity="style" msg="Class &apos;ButtonLabel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgdlg.h" line="48" id="noExplicitConstructor" severity="style" msg="Class &apos;ButtonLabel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgdlg.h" line="53" id="noExplicitConstructor" severity="style" msg="Class &apos;ButtonLabel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msgdlg.h" line="58" id="noExplicitConstructor" severity="style" msg="Class &apos;ButtonLabel&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\brush.h" line="30" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBrush&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\geometry.h" line="42" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPoint2DInt&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\geometry.h" line="292" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPoint2DDouble&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\geometry.h" line="294" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPoint2DDouble&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\geometry.h" line="655" id="noExplicitConstructor" severity="style" msg="Class &apos;wxRect2DInt&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="265" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDCImpl&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1371" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1326" id="noExplicitConstructor" severity="style" msg="Class &apos;TempHDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1388" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDCTextColourChanger&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dc.h" line="1501" id="noExplicitConstructor" severity="style" msg="Class &apos;wxDCFontChanger&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="21" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="24" id="noExplicitConstructor" severity="style" msg="Class &apos;wxWindowDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="37" id="noExplicitConstructor" severity="style" msg="Class &apos;wxClientDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="40" id="noExplicitConstructor" severity="style" msg="Class &apos;wxClientDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="53" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPaintDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcclient.h" line="56" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPaintDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcmemory.h" line="25" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMemoryDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcmemory.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxMemoryDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcprint.h" line="28" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPrinterDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcprint.h" line="34" id="noExplicitConstructor" severity="style" msg="Class &apos;wxPrinterDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\listbox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;wxListBoxItemsArray&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\listbox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\listbox.h" line="26" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="272" id="noExplicitConstructor" severity="style" msg="Class &apos;wxToolBarToolsList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="272" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="272" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\tbarbase.h" line="272" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="45" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSizerFlags&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="232" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSizerSpacer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="488" id="noExplicitConstructor" severity="style" msg="Class &apos;wxSizerItemList&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="488" id="noExplicitConstructor" severity="style" msg="Class &apos;compatibility_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="488" id="noExplicitConstructor" severity="style" msg="Class &apos;const_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="488" id="noExplicitConstructor" severity="style" msg="Class &apos;const_reverse_iterator&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\sizer.h" line="934" id="noExplicitConstructor" severity="style" msg="Class &apos;wxBoxSizer&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcbuffer.h" line="220" id="noExplicitConstructor" severity="style" msg="Class &apos;wxAutoBufferedPaintDC&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dcbuffer.h" line="191" id="clarifyCalculation" severity="style" msg="Suspicious calculation. Please use parentheses to clarify the code. The code &apos;&apos;a&amp;b?c:d&apos;&apos; should be written as either &apos;&apos;(a&amp;b)?c:d&apos;&apos; or &apos;&apos;a&amp;(b?c:d)&apos;&apos;." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\mdi.h" line="212" id="passedByValue" severity="style" msg="Parameter &apos;wxEmptyString&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="wxTEDMain.cpp" line="1202" id="passedByValue" severity="style" msg="Parameter &apos;initialPage&apos; is passed by value. It could be passed as a (const) reference which is usually faster and recommended in C++." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\display.h" line="21" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\module.h" line="21" id="CastAddressToIntegerAtReturn" severity="style" msg="Returning an address value in a function with integer (int/long/etc) return type is not portable across different platforms and compilers. For example in 32-bit Windows and Linux they are same width, but in 64-bit Windows and Linux they are of different width. In worst case you end up casting 64-bit address down to 32-bit integer. The safe way is to always return an integer." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\bookctrl.h" line="26" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="36" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\menu.h" line="37" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\msw\menu.h" line="18" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\dataobj.h" line="261" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="returnReference" severity="error" msg="Reference to auto variable returned." />
    <error file="E:\dev\downloads\wxWidgets302\include\wx\persist.h" line="19" id="returnTempReference" severity="error" msg="Reference to temporary returned." />
    <error file="tedevent.h" line="81" id="unusedFunction" severity="style" msg="The function &apos;CharIsNull&apos; is never used." />
    <error file="HelpFrame.cpp" line="12" id="unusedFunction" severity="style" msg="The function &apos;GetEventTable&apos; is never used." />
    <error file="ttxline.cpp" line="97" id="unusedFunction" severity="style" msg="The function &apos;GetMappedline&apos; is never used." />
    <error file="tedevent.h" line="65" id="unusedFunction" severity="style" msg="The function &apos;GetnextEvent&apos; is never used." />
    <error file="wxTEDMain.cpp" line="2575" id="unusedFunction" severity="style" msg="The function &apos;OnPanel1Paint1&apos; is never used." />
    <error file="wxTEDMain.h" line="76" id="unusedFunction" severity="style" msg="The function &apos;Page&apos; is never used." />
    <error file="charchange.h" line="41" id="unusedFunction" severity="style" msg="The function &apos;SetLoc&apos; is never used." />
    <error file="charchange.h" line="24" id="unusedFunction" severity="style" msg="The function &apos;Setnext&apos; is never used." />
    <error file="tedevent.cpp" line="20" id="unusedFunction" severity="style" msg="The function &apos;print&apos; is never used." />
    <error file="hamm.c" line="101" id="unusedFunction" severity="style" msg="The function &apos;vbi_ham24p&apos; is never used." />
    <error file="hamm.h" line="169" id="unusedFunction" severity="style" msg="The function &apos;vbi_ham8&apos; is never used." />
    <error file="hamm.c" line="45" id="unusedFunction" severity="style" msg="The function &apos;vbi_par&apos; is never used." />
    <error file="hamm.h" line="107" id="unusedFunction" severity="style" msg="The function &apos;vbi_par8&apos; is never used." />
    <error file="hamm.h" line="73" id="unusedFunction" severity="style" msg="The function &apos;vbi_rev16&apos; is never used." />
    <error file="hamm.h" line="91" id="unusedFunction" severity="style" msg="The function &apos;vbi_rev16p&apos; is never used." />
    <error file="hamm.h" line="57" id="unusedFunction" severity="style" msg="The function &apos;vbi_rev8&apos; is never used." />
    <error file="hamm.h" line="207" id="unusedFunction" severity="style" msg="The function &apos;vbi_unham16p&apos; is never used." />
    <error file="hamm.c" line="140" id="unusedFunction" severity="style" msg="The function &apos;vbi_unham24p&apos; is never used." />
    <error file="hamm.h" line="187" id="unusedFunction" severity="style" msg="The function &apos;vbi_unham8&apos; is never used." />
    <error file="hamm.c" line="71" id="unusedFunction" severity="style" msg="The function &apos;vbi_unpar&apos; is never used." />
    <error file="hamm.h" line="127" id="unusedFunction" severity="style" msg="The function &apos;vbi_unpar8&apos; is never used." />
    <error file="wxTEDApp.cpp" line="17" id="unusedFunction" severity="style" msg="The function &apos;wxGetApp&apos; is never used." />
    <error file="wxTEDMain.cpp" line="50" id="unusedFunction" severity="style" msg="The function &apos;wxbuildinfo&apos; is never used." />
    <error id="missingInclude" severity="style" msg="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config." />
</results>
